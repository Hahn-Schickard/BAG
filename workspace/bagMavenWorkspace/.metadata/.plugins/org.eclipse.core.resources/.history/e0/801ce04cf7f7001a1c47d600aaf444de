// automatically generated by Xtext
grammar bag.dsl.BagDsl with org.eclipse.xtext.common.Terminals

import "http://www.bag.org/bagEcore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

App returns App:
	'App'
	name=EString
	'{'
		'packageName' packageName=EString
		'sensor' sensor=Sensor
		('macfilter' macfilter=MacFilter)?
		('namefilter' namefilter=NameFilter)?
	'}';









EString returns ecore::EString:
	STRING | ID;

Sensor returns Sensor:
	'Sensor'
	name=EString
	'{'
		'service' '{' service+=Service ( "," service+=Service)* '}' 
	'}';

MacFilter returns MacFilter:
	'MacFilter'
	'{'
		'macaddress' '{' macaddress+=MacAddress ( "," macaddress+=MacAddress)* '}' 
	'}';

NameFilter returns NameFilter:
	'NameFilter'
	'{'
		'name' name=NameExpression
	'}';

Service returns Service:
	'Service'
	name=EString
	'{'
		'uuid' uuid=EString
		'characteristic' '{' characteristic+=Characteristic ( "," characteristic+=Characteristic)* '}' 
	'}';

Characteristic returns Characteristic:
	read?='read'
	write?='write'
	notification?='notification'
	'Characteristic'
	name=EString
	'{'
		'uuid' uuid=EString
		'dataType' dataType=DataType
		('unit' unit=EString)?
		('uielement' uielement=UiElement)?
	'}';

enum DataType returns DataType:
				Float = 'Float' | Double = 'Double' | Integer = 'Integer' | String = 'String' | Bytes = 'Bytes' | Byte = 'Byte';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

UiElement returns UiElement:
	'UiElement'
	name=EString
	'{'
		'label' label=EString
		('description' description=EString)?
	'}';

MacAddress returns MacAddress:
	'MacAddress'
	'{'
		'address' address=EString
	'}';

NameExpression returns NameExpression:
	'NameExpression'
	'{'
		'regEx' regEx=EString
	'}';
