/*
 * generated by Xtext 2.17.0
 */
packagebag.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import bag.model.bagEcore.App
import javax.inject.Inject

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class DSLGenerator extends AbstractGenerator {
	
	// Reference to the other generator files
	@Inject AndroidGenerator androidGenerator
	@Inject IosGenerator iosGenerator
	
	// Helper variables
	String appName = "";
	String packageName = "";
	String appNamePath = "";

/**
 * General generate-method. Starting point of the generation process. Inside this method the other defined generate-methods are called.
 */
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for(i : resource.allContents.toIterable.filter(App)) {
			
			// Convert package name to lower case
			appName = i.name;
			packageName = i.packageName.toLowerCase;
			// Convert application name to lower case and remove spaces
			appNamePath = (appName.replaceAll(" ", "")).toLowerCase;
			
			// Android generate-methods
			fsa.generateFile("generated/" + appNamePath + "/android/settings/AndroidManifest.xml", androidGenerator.generateAndroidManifest(packageName, appNamePath));
			fsa.generateFile("generated/" + appNamePath + "/android/settings/build.gradle", androidGenerator.generateBuildGradle(packageName, appNamePath));
			fsa.generateFile("generated/" + appNamePath + "/android/resources/layout/actionbar_indeterminate_progress.xml", androidGenerator.generateActionbar());
			fsa.generateFile("generated/" + appNamePath + "/android/resources/layout/listitem_device.xml", androidGenerator.generateListitem);
			fsa.generateFile("generated/" + appNamePath + "/android/resources/layout/device_control_activity.xml", androidGenerator.generateDeviceControlLayout(i.sensor));
			fsa.generateFile("generated/" + appNamePath + "/android/menu/gatt_services.xml", androidGenerator.generateGattServices);
			fsa.generateFile("generated/" + appNamePath + "/android/menu/main.xml", androidGenerator.generateMainXml);
			fsa.generateFile("generated/" + appNamePath + "/android/resources/values/colors.xml", androidGenerator.generateColors);
			fsa.generateFile("generated/" + appNamePath + "/android/resources/values/styles.xml", androidGenerator.generateStyles);
			fsa.generateFile("generated/" + appNamePath + "/android/resources/values/strings.xml", androidGenerator.generateStrings(i.sensor, appName));
			fsa.generateFile("generated/" + appNamePath + "/android/java/GattAttributes.java", androidGenerator.generateGattAttributes(i.sensor, packageName, appNamePath));
			fsa.generateFile("generated/" + appNamePath + "/android/java/DeviceScanActivity.java", androidGenerator.generateDeviceScan(i, packageName, appNamePath));
			fsa.generateFile("generated/" + appNamePath + "/android/java/BluetoothLeService.java", androidGenerator.generateBluetoothLeService(i.sensor, packageName, appNamePath));
			fsa.generateFile("generated/" + appNamePath + "/android/java/DeviceControlActivity.java", androidGenerator.generateDeviceControlActivity(i.sensor, packageName, appNamePath));
			fsa.generateFile("generated/" + appNamePath + "/android/java/DataStruct.java", androidGenerator.generateDataStruct(i.sensor, packageName, appNamePath));
			fsa.generateFile("generated/" + appNamePath + "/android/java/Helper.java", androidGenerator.generateHelper(i.sensor, packageName, appNamePath));
			
			// iOS generate-methods
			fsa.generateFile("generated/" + appNamePath + "/iOS/AppDelegate.swift", iosGenerator.generateAppDelegate);
			fsa.generateFile("generated/" + appNamePath + "/iOS/SceneDelegate.swift", iosGenerator.generateSceneDelegate);
			fsa.generateFile("generated/" + appNamePath + "/iOS/ItemsViewController.swift", iosGenerator.generateItemsViewController);
			fsa.generateFile("generated/" + appNamePath + "/iOS/BLEManager.swift", iosGenerator.generateBLEManager(i));
			fsa.generateFile("generated/" + appNamePath + "/iOS/ViewController.swift", iosGenerator.generateViewController(i.sensor));
			fsa.generateFile("generated/" + appNamePath + "/iOS/Main.storyboard", iosGenerator.generateStoryboard(i.sensor));
			fsa.generateFile("generated/" + appNamePath + "/iOS/Info.plist", iosGenerator.generateInfo);
		}
	}
}