/*
 * generated by Xtext 2.22.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package bag.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package bag.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import bag.services.DSLGrammarAccess;

}

@parser::members {

 	private DSLGrammarAccess grammarAccess;

    public InternalDSLParser(TokenStream input, DSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "App";
   	}

   	@Override
   	protected DSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleApp
entryRuleApp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAppRule()); }
	iv_ruleApp=ruleApp
	{ $current=$iv_ruleApp.current; }
	EOF;

// Rule App
ruleApp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='App'
		{
			newLeafNode(otherlv_0, grammarAccess.getAppAccess().getAppKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAppAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAppRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"bag.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAppAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='packageName'
		{
			newLeafNode(otherlv_3, grammarAccess.getAppAccess().getPackageNameKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAppAccess().getPackageNameEStringParserRuleCall_4_0());
				}
				lv_packageName_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAppRule());
					}
					set(
						$current,
						"packageName",
						lv_packageName_4_0,
						"bag.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAppAccess().getSensorSensorParserRuleCall_5_0());
				}
				lv_sensor_5_0=ruleSensor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAppRule());
					}
					set(
						$current,
						"sensor",
						lv_sensor_5_0,
						"bag.DSL.Sensor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAppAccess().getMacfilterMacFilterParserRuleCall_6_0());
				}
				lv_macfilter_6_0=ruleMacFilter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAppRule());
					}
					set(
						$current,
						"macfilter",
						lv_macfilter_6_0,
						"bag.DSL.MacFilter");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAppAccess().getNamefilterNameFilterParserRuleCall_7_0());
				}
				lv_namefilter_7_0=ruleNameFilter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAppRule());
					}
					set(
						$current,
						"namefilter",
						lv_namefilter_7_0,
						"bag.DSL.NameFilter");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getAppAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorAccess().getSensorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"bag.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getServiceServiceParserRuleCall_3_0());
				}
				lv_service_3_0=ruleService
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					add(
						$current,
						"service",
						lv_service_3_0,
						"bag.DSL.Service");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getSensorAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSensorAccess().getServiceServiceParserRuleCall_4_1_0());
					}
					lv_service_5_0=ruleService
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensorRule());
						}
						add(
							$current,
							"service",
							lv_service_5_0,
							"bag.DSL.Service");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMacFilter
entryRuleMacFilter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMacFilterRule()); }
	iv_ruleMacFilter=ruleMacFilter
	{ $current=$iv_ruleMacFilter.current; }
	EOF;

// Rule MacFilter
ruleMacFilter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MacFilter'
		{
			newLeafNode(otherlv_0, grammarAccess.getMacFilterAccess().getMacFilterKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMacFilterAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMacFilterAccess().getMacaddressMacAddressParserRuleCall_2_0());
				}
				lv_macaddress_2_0=ruleMacAddress
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMacFilterRule());
					}
					add(
						$current,
						"macaddress",
						lv_macaddress_2_0,
						"bag.DSL.MacAddress");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getMacFilterAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacFilterAccess().getMacaddressMacAddressParserRuleCall_3_1_0());
					}
					lv_macaddress_4_0=ruleMacAddress
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacFilterRule());
						}
						add(
							$current,
							"macaddress",
							lv_macaddress_4_0,
							"bag.DSL.MacAddress");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMacFilterAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleNameFilter
entryRuleNameFilter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameFilterRule()); }
	iv_ruleNameFilter=ruleNameFilter
	{ $current=$iv_ruleNameFilter.current; }
	EOF;

// Rule NameFilter
ruleNameFilter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NameFilter'
		{
			newLeafNode(otherlv_0, grammarAccess.getNameFilterAccess().getNameFilterKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNameFilterAccess().getNameNameExpressionParserRuleCall_1_0());
				}
				lv_name_1_0=ruleNameExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNameFilterRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"bag.DSL.NameExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"bag.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='uuid'
		{
			newLeafNode(otherlv_3, grammarAccess.getServiceAccess().getUuidKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getUuidEStringParserRuleCall_4_0());
				}
				lv_uuid_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					set(
						$current,
						"uuid",
						lv_uuid_4_0,
						"bag.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getCharacteristicCharacteristicParserRuleCall_5_0());
				}
				lv_characteristic_5_0=ruleCharacteristic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					add(
						$current,
						"characteristic",
						lv_characteristic_5_0,
						"bag.DSL.Characteristic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getServiceAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAccess().getCharacteristicCharacteristicParserRuleCall_6_1_0());
					}
					lv_characteristic_7_0=ruleCharacteristic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceRule());
						}
						add(
							$current,
							"characteristic",
							lv_characteristic_7_0,
							"bag.DSL.Characteristic");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleCharacteristic
entryRuleCharacteristic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharacteristicRule()); }
	iv_ruleCharacteristic=ruleCharacteristic
	{ $current=$iv_ruleCharacteristic.current; }
	EOF;

// Rule Characteristic
ruleCharacteristic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Characteristic'
		{
			newLeafNode(otherlv_0, grammarAccess.getCharacteristicAccess().getCharacteristicKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCharacteristicAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharacteristicRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"bag.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCharacteristicAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='uuid'
		{
			newLeafNode(otherlv_3, grammarAccess.getCharacteristicAccess().getUuidKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCharacteristicAccess().getUuidEStringParserRuleCall_4_0());
				}
				lv_uuid_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharacteristicRule());
					}
					set(
						$current,
						"uuid",
						lv_uuid_4_0,
						"bag.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='dataType'
		{
			newLeafNode(otherlv_5, grammarAccess.getCharacteristicAccess().getDataTypeKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCharacteristicAccess().getDataTypeDataTypeEnumRuleCall_6_0());
				}
				lv_dataType_6_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharacteristicRule());
					}
					set(
						$current,
						"dataType",
						lv_dataType_6_0,
						"bag.DSL.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='unit'
			{
				newLeafNode(otherlv_7, grammarAccess.getCharacteristicAccess().getUnitKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCharacteristicAccess().getUnitEStringParserRuleCall_7_1_0());
					}
					lv_unit_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCharacteristicRule());
						}
						set(
							$current,
							"unit",
							lv_unit_8_0,
							"bag.DSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='read'
		{
			newLeafNode(otherlv_9, grammarAccess.getCharacteristicAccess().getReadKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCharacteristicAccess().getReadEBooleanParserRuleCall_9_0());
				}
				lv_read_10_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharacteristicRule());
					}
					set(
						$current,
						"read",
						lv_read_10_0,
						"bag.DSL.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='write'
		{
			newLeafNode(otherlv_11, grammarAccess.getCharacteristicAccess().getWriteKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCharacteristicAccess().getWriteEBooleanParserRuleCall_11_0());
				}
				lv_write_12_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharacteristicRule());
					}
					set(
						$current,
						"write",
						lv_write_12_0,
						"bag.DSL.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='notification'
		{
			newLeafNode(otherlv_13, grammarAccess.getCharacteristicAccess().getNotificationKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCharacteristicAccess().getNotificationEBooleanParserRuleCall_13_0());
				}
				lv_notification_14_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharacteristicRule());
					}
					set(
						$current,
						"notification",
						lv_notification_14_0,
						"bag.DSL.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCharacteristicAccess().getUielementUIElementParserRuleCall_14_0());
				}
				lv_uielement_15_0=ruleUIElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharacteristicRule());
					}
					set(
						$current,
						"uielement",
						lv_uielement_15_0,
						"bag.DSL.UIElement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getCharacteristicAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleUIElement
entryRuleUIElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUIElementRule()); }
	iv_ruleUIElement=ruleUIElement
	{ $current=$iv_ruleUIElement.current; }
	EOF;

// Rule UIElement
ruleUIElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UiElement'
		{
			newLeafNode(otherlv_0, grammarAccess.getUIElementAccess().getUiElementKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUIElementAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUIElementRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"bag.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getUIElementAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='label'
		{
			newLeafNode(otherlv_3, grammarAccess.getUIElementAccess().getLabelKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUIElementAccess().getLabelEStringParserRuleCall_4_0());
				}
				lv_label_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUIElementRule());
					}
					set(
						$current,
						"label",
						lv_label_4_0,
						"bag.DSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='description'
			{
				newLeafNode(otherlv_5, grammarAccess.getUIElementAccess().getDescriptionKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUIElementAccess().getDescriptionEStringParserRuleCall_5_1_0());
					}
					lv_description_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUIElementRule());
						}
						set(
							$current,
							"description",
							lv_description_6_0,
							"bag.DSL.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getUIElementAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleMacAddress
entryRuleMacAddress returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMacAddressRule()); }
	iv_ruleMacAddress=ruleMacAddress
	{ $current=$iv_ruleMacAddress.current; }
	EOF;

// Rule MacAddress
ruleMacAddress returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMacAddressAccess().getAddressEStringParserRuleCall_0());
			}
			lv_address_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMacAddressRule());
				}
				set(
					$current,
					"address",
					lv_address_0_0,
					"bag.DSL.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNameExpression
entryRuleNameExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameExpressionRule()); }
	iv_ruleNameExpression=ruleNameExpression
	{ $current=$iv_ruleNameExpression.current; }
	EOF;

// Rule NameExpression
ruleNameExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNameExpressionAccess().getRegExEStringParserRuleCall_0());
			}
			lv_regEx_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNameExpressionRule());
				}
				set(
					$current,
					"regEx",
					lv_regEx_0_0,
					"bag.DSL.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Rule DataType
ruleDataType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Float'
			{
				$current = grammarAccess.getDataTypeAccess().getFloatEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getFloatEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Double'
			{
				$current = grammarAccess.getDataTypeAccess().getDoubleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getDoubleEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Integer'
			{
				$current = grammarAccess.getDataTypeAccess().getIntegerEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataTypeAccess().getIntegerEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='String'
			{
				$current = grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Bytes'
			{
				$current = grammarAccess.getDataTypeAccess().getBytesEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDataTypeAccess().getBytesEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Byte'
			{
				$current = grammarAccess.getDataTypeAccess().getByteEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDataTypeAccess().getByteEnumLiteralDeclaration_5());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
