/**
 * generated by Xtext 2.17.0
 */
package bag.generator;

import bag.generator.AndroidGenerator;
import bag.generator.IosGenerator;
import bag.model.bagEcore.App;
import com.google.common.collect.Iterables;
import javax.inject.Inject;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class DSLGenerator extends AbstractGenerator {
  @Inject
  private AndroidGenerator androidGenerator;
  
  @Inject
  private IosGenerator iosGenerator;
  
  private String appName = "";
  
  private String packageName = "";
  
  private String appNamePath = "";
  
  /**
   * General generate-method. Starting point of the generation process. Inside this method the other defined generate-methods are called.
   */
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    Iterable<App> _filter = Iterables.<App>filter(IteratorExtensions.<EObject>toIterable(resource.getAllContents()), App.class);
    for (final App i : _filter) {
      {
        this.appName = i.getName();
        this.packageName = i.getPackageName().toLowerCase();
        this.appNamePath = this.appName.replaceAll(" ", "").toLowerCase();
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/settings/AndroidManifest.xml"), this.androidGenerator.generateAndroidManifest(this.packageName, this.appNamePath));
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/settings/build.gradle"), this.androidGenerator.generateBuildGradle(this.packageName, this.appNamePath));
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/resources/layout/actionbar_indeterminate_progress.xml"), this.androidGenerator.generateActionbar());
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/resources/layout/listitem_device.xml"), this.androidGenerator.generateListitem());
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/resources/layout/device_control_activity.xml"), this.androidGenerator.generateDeviceControlLayout(i.getSensor()));
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/menu/gatt_services.xml"), this.androidGenerator.generateGattServices());
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/menu/main.xml"), this.androidGenerator.generateMainXml());
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/resources/values/colors.xml"), this.androidGenerator.generateColors());
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/resources/values/styles.xml"), this.androidGenerator.generateStyles());
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/resources/values/strings.xml"), this.androidGenerator.generateStrings(i.getSensor(), this.appName));
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/java/GattAttributes.java"), this.androidGenerator.generateGattAttributes(i.getSensor(), this.packageName, this.appNamePath));
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/java/DeviceScanActivity.java"), this.androidGenerator.generateDeviceScan(i, this.packageName, this.appNamePath));
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/java/BluetoothLeService.java"), this.androidGenerator.generateBluetoothLeService(i.getSensor(), this.packageName, this.appNamePath));
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/java/DeviceControlActivity.java"), this.androidGenerator.generateDeviceControlActivity(i.getSensor(), this.packageName, this.appNamePath));
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/java/DataStruct.java"), this.androidGenerator.generateDataStruct(i.getSensor(), this.packageName, this.appNamePath));
        fsa.generateFile((("generated/" + this.appNamePath) + "/android/java/Helper.java"), this.androidGenerator.generateHelper(i.getSensor(), this.packageName, this.appNamePath));
        fsa.generateFile((("generated/" + this.appNamePath) + "/iOS/AppDelegate.swift"), this.iosGenerator.generateAppDelegate());
        fsa.generateFile((("generated/" + this.appNamePath) + "/iOS/SceneDelegate.swift"), this.iosGenerator.generateSceneDelegate());
        fsa.generateFile((("generated/" + this.appNamePath) + "/iOS/ItemsViewController.swift"), this.iosGenerator.generateItemsViewController());
        fsa.generateFile((("generated/" + this.appNamePath) + "/iOS/BLEManager.swift"), this.iosGenerator.generateBLEManager(i));
        fsa.generateFile((("generated/" + this.appNamePath) + "/iOS/ViewController.swift"), this.iosGenerator.generateViewController(i.getSensor()));
        fsa.generateFile((("generated/" + this.appNamePath) + "/iOS/Main.storyboard"), this.iosGenerator.generateStoryboard(i.getSensor()));
        fsa.generateFile((("generated/" + this.appNamePath) + "/iOS/Info.plist"), this.iosGenerator.generateInfo());
      }
    }
  }
}
